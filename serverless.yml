# service: omni-live-real-time-orders

# provider:
#   name: aws
#   stage: dev  # or {opt:stage, 'dev'} for defaulting to dev if not specified
#   ecr:
#     images:
#       realtimeOrders:
#         uri: 332281781429.dkr.ecr.us-east-1.amazonaws.com/omni-live-real-time-updates-dev:latest

# functions:
#   realtimeOrdersFunction:
#     image:
#       uri: ${self:provider.ecr.images.realtimeOrders.uri}  
#     timeout: 600
#     # events:
#     #   - s3:
#     #       bucket: dms-dw-etl-lvlp
#     #       event: s3:ObjectCreated:Put
#     #       rules:
#     #         - prefix: dev/dbo/orders/
#     #       existing: true
#     description: "LiVe Orders Table - ${self:provider.stage}"





service: omni-live-real-time-updates

provider:
  name: aws
  region: ${opt:region, 'us-east-1'}
  stage: ${opt:stage, 'dev'}
  versionFunctions: false
  tags: ${self:custom.tags}
  stackTags: ${self:custom.tags}
  role: ${ssm:/omni-dw/${self:provider.stage}/lambda/role}
  vpc:
    securityGroupIds:
      - ${ssm:/omni-dw/${self:provider.stage}/lambda/sgId}
    subnetIds:
      - ${ssm:/omni-dw/${self:provider.stage}/lambda/subnetA}


custom:
  region: ${opt:region, 'us-east-1'}
  stage: ${opt:stage, 'dev'}
  tags:
    Application: LiVe Real Time Updates
    CreateBy: BizCloudExperts
    Environment: ${self:custom.stage}

layers:
  PythonLayer:
    name: ${self:provider.stage}-PythonLayer
    compatibleRuntimes:
      - python3.11
    package:
      artifact: python/layers.zip
    description: "Python Layer"

plugins:
  - serverless-offline
  - serverless-step-functions

package:
  individually: true

functions:
  ordersRT: ${file(config/functions/realtime/ordersRT.yml):function}